<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAGACoDAAAJgAAABAQAAAAABgAaAMAAM4MAAAoAAAAIAAAAEAAAAABABgAAAAAAAAM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v7+/Pz8+fn59fX18/Pz8vLy8fHx8PDw7u7u7e3t7e3t
        7e3t7Ozs7Ozs7Ozs7Ozs7e3t7e3t7e3t7u7u8PDw8fHx8vLy8vLy9fX1+Pj4/Pz8/v7+AAAAAAAAAAAA
        /v7++fn57u7u4uLi19fX0NDQzs7Ozc3NycnJxsbGxMTExMTExMTEwsLCwsLCw8PDw8PDxMTExMTExcXF
        x8fHy8vLzc3Nzs7O09PT29vb5+fn8vLy+/v7/v7+AAAAAAAA/Pz88fHxY4qzCjViCjViCjViCjViCjVi
        CjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViWX6k1NTU6enp
        9/f3/v7+AAAAAAAA9fX119fXCjViAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGm
        AFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmCjViw8PD6enp+vr6/v7+AAAAAAAA+/v77u7uCjViAVKn
        AU6fAUaPAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUaPAU6f
        AVKnCjVi6enp+Pj4/v7+/v7+AAAAAAAAAAAAAAAACjViAVOoAUeQ/f39/f39/f39/f39/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39AUeQAVOoCjViAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACjViAlOpAkOJ/f39/f39/f39/f39/f39/f39/f39/f39/f39/f399fX7lJTmV1fZdnbg1tb1
        /f39/f39/f39AkOJAlOpCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViAlSqAkSK/f39/f39cXFx
        cXFxcXFxcXFxcXFx/f39/f39xsbxFRXLdHTgfHzmfX3kMDDRgYHi/f39/f39AkSKAlSqCjViAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACjViA1WrAkWL/f39/f39/f39cXFx/f39/f39cXFx/f39/f39ZWXcfX3l
        ODjdf3/oW1vjeXnnMzPR2dn1/f39AkWLA1WrCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViA1et
        AkeM/f39/f39/f39/f39/f39/f39/f39/f392dn1NjbSW1vjyMj0/f39/f39Vlbifn7keHjg/f39AkeM
        A1etCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViBFiuA0eN/f39/f39/f39/f39/f39/f39/f39
        /f391NT0OzvTOjrd6en6/f39/f39dHTncXHjc3Pf/f39A0eNBFiuCjViAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACjViBVmwBEiP/f39/f39cXFxcXFxcXFxcXFxcXFx/f39+vr8FRXLgoLoamrlz8/2qqrvLi7b
        W1vasrLt/f39BEiPBVmwCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViBlqxBUmQ/f39/f39cXFx
        /f39/f39cXFx/f39/f39/f39lJTmPj7UlpbrVFThd3fnb2/gc3Pf/f39/f39BUmQBlqxCjViAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACjViBluzBUqR/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39l5fn
        NjbSKyvPGBjLeHjg7+/6/f39/f39BUqRBluzCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViB120
        BkuS/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f395OT4/f39/f39/f39/f39/f39BkuS
        B120CjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViCF62BkyU/f39/f39cXFxcXFxcXFxcXFxcXFx
        cXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFx/f39/f39BkyUCF62CjViAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACjViCV+4B02V/f39/f39/f39/f39cXFx/f39/f39cXFx/f39/f39cXFx/f39/f39/f39cXFx
        /f39/f39/f39B02VCV+4CjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViCWC5B06W/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39B06WCWC5CjViAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACjViCmK7CFCY/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39CFCYCmK7CjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViC2O8
        CVCZ/f39/f39cXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFx/f39/f39CVCZ
        C2O8CjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViC2S+CVGa/f39/f39/f39cXFx/f39/f39/f39
        /f39/f39cXFx/f39/f39/f39cXFx/f39/f39/f39/f39CVGaC2S+CjViAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACjViDGW/ClKb/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39
        /f39/f39/f39ClKbDGW/CjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViDWbBC1Od/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39C1OdDWbBCjViAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACjViDWfCC1Sd/f39/f39cXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFx
        cXFxcXFxcXFxcXFxcXFx/f39/f39C1SdDWfCCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViDmjD
        C1Se/f39/f39/f39/f39/f39cXFx/f39cXFx/f39/f39cXFx/f39/f39cXFx/f39/f39/f39/f39C1Se
        DmjDCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViDmnEC1Wf/f39/f39/f39/f39/f39/f39/f39
        /f39/f39/f39/f39/f39/f39/f39/f39/f39/f39/f39C1WfDmnECjViAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACjViD2rFDFag/f399vb25+fn4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg
        4ODg4ODg5+fnDFScD2rFCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjViD2rGDVuq/f395+fnvr6+
        qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovr6+DFObD2rGCjViAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACjViEGvHD2a+DlyrXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc
        XFxcXFxcXFxcXFxcXFxcXFxcCT1xDVqoEGvHCjViAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc57LCjVi
        CjViCjVirq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6trq6tByhJCTBa
        CjVic57LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgYGBgYGBgYGBgYGBgYGBgYGB
        gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB6enp+Pj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAcAAAADAAAAAwAAAAMAAAADwAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP/wAAP/////8oAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAACjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjViCjVi
        WX6k1NTUBVmwAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmAFGmCjViw8PDBVmwB06W
        AUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUOIAUaPAU6fAVKnCjVi6enpBVmwB06W/f39/f39/f39/f39
        /f39/f39/f39/f39/f39/f39AUeQAVOoCjViAAAABVmwB06W/f39/f399fX7lJTmV1fZdnbg1tb1/f39
        /f39/f39AkOJAlOpCjViAAAABVmwB06W/f39xsbxFRXLdHTgfHzmfX3kMDDRgYHi/f39/f39AkSKAlSq
        CjViAAAABVmwB06W/f39ZWXcfX3lODjdf3/oW1vjeXnnMzPR2dn1/f39AkWLA1WrCjViAAAABVmwB06W
        2dn1NjbSW1vjyMj0/f39/f39Vlbifn7keHjg/f39AkeMA1etCjViAAAABVmwB06W1NT0OzvTOjrd6en6
        /f39/f39dHTncXHjc3Pf/f39A0eNBFiuCjViAAAABVmwB06W+vr8FRXLgoLoamrlz8/2qqrvLi7bW1va
        srLt/f39BEiPBVmwCjViAAAABVmwB06W/f39lJTmPj7UlpbrVFThd3fnb2/gc3Pf/f39/f39BUmQBlqx
        CjViAAAABVmwB06W/f39/f39l5fnNjbSKyvPGBjLeHjg7+/6/f39/f39BUqRBluzCjViAAAABVmwB06W
        /f39/f39/f39/f395OT4/f39/f39/f39/f39/f39BkuSB120CjViAAAABVmwB06WCV+4/f39/f39/f39
        /f39/f39/f39/f39/f39CV+4BkyUCF62CjViAAAABVmwB06WB06WB06WB06WB06WB06WB06WB06WB06W
        B06WB06WB06WCV+4CjViAAAABVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmwBVmw
        CjViAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAB
        AAAAAQAAAAEAAA==
</value>
  </data>
</root>